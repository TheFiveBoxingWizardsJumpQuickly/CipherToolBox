"""
TEST
"""
import sys


def assert_function(expected, result):
    print('Expected: ' + expected)
    print('Result  : ' + result)
    print(expected == result)


def test1():
    # https://www.semanticscholar.org/paper/ENIGMA-CIPHER-MACHINE-SIMULATOR-7-.-0-.-6-Enigma/78ab14eca0118c191184bdb2195894dd543d4b25
    # ENIGMA CIPHER MACHINE SIMULATOR 7 . 0 . 6
    import enigma
    result = enigma.enigma(
        text='EDPUD NRGYS ZRCXN UYTPO MRMBO FKTBZ REZKM LXLVE FGUEY SIOZV EQMIK UBPMM YLKLT TDEIS MDICA GYKUA CTCDO MOHWX MUUIA UBSTS LRNBZ SZWNR FXWFY SSXJZ VIJHI DISHP RKLKA YUPAD TXQSP INQMA TLPIF SVKDA SCTAC DPBOP VHJK',
        rotor_left_id=2, rotor_mid_id=4, rotor_right_id=5,
        reflector_id='B', rotor_key='BLA', ringsetting_key='BUL', plugboard=['AV', 'BS', 'CG', 'DL', 'FU', 'HZ', 'IN', 'KM', 'OW', 'RX'])
    expected = 'AUFKL XABTE ILUNG XVONX KURTI NOWAX KURTI NOWAX NORDW ESTLX SEBEZ XSEBE ZXUAF FLIEG ERSTR ASZER IQTUN GXDUB ROWKI XDUBR OWKIX OPOTS CHKAX OPOTS CHKAX UMXEI NSAQT DREIN ULLXU HRANG ETRET ENXAN GRIFF XINFX RGTX'

    print(sys._getframe().f_code.co_name)
    assert_function(expected, result)
    print('')


def test2():
    # https://www.semanticscholar.org/paper/ENIGMA-CIPHER-MACHINE-SIMULATOR-7-.-0-.-6-Enigma/78ab14eca0118c191184bdb2195894dd543d4b25
    # ENIGMA CIPHER MACHINE SIMULATOR 7 . 0 . 6
    import enigma
    result = enigma.enigma(
        text='SFBWD NJUSE GQOBH KRTAR EEZMW KPPRB XOHDR OEQGB BGTQV PGVKB VVGBI MHUSZ YDAJQ IROAX SSSNR EHYGG RPISE ZBOVM QIEMM ZCYSG QDGRE RVBIL EKXYQ IRGIR QNRDN VRXCY YTNJR',
        rotor_left_id=2, rotor_mid_id=4, rotor_right_id=5,
        reflector_id='B', rotor_key='LSD', ringsetting_key='BUL', plugboard=['AV', 'BS', 'CG', 'DL', 'FU', 'HZ', 'IN', 'KM', 'OW', 'RX'])
    expected = 'DREIG EHTLA NGSAM ABERS IQERV ORWAE RTSXE INSSI EBENN ULLSE QSXUH RXROE MXEIN SXINF RGTXD REIXA UFFLI EGERS TRASZ EMITA NFANG XEINS SEQSX KMXKM XOSTW XKAME NECXK'

    print(sys._getframe().f_code.co_name)
    assert_function(expected, result)
    print('')


def test3():
    # https://cryptii.com/pipes/enigma-machine
    import enigma
    result = enigma.enigma(
        text='ALICE TOOKU PTHEF ANAND GLOVE SANDA STHEH ALLWA SVERY HOTSH EKEPT FANNI NGHER SELFA LLTHE TIMES HEWEN TONTA LKING DEARD EARHO WQUEE REVER YTHIN GISTO DAYAN DYEST ERDAY THING SWENT ONJUS TASUS UALIW ONDER IFIVE BEENC HANGE DINTH ENIGH TLETM ETHIN KWASI THESA MEWHE NIGOT UPTHI SMORN INGIA LMOST THINK ICANR EMEMB ERFEE LINGA LITTL EDIFF ERENT BUTIF IMNOT THESA METHE NEXTQ UESTI ONISW HOINT HEWOR LDAMI AHTHA TSTHE GREAT PUZZL EANDS HEBEG ANTHI NKING OVERA LLTHE CHILD RENSH EKNEW THATW EREOF THESA MEAGE ASHER SELFT OSEEI FSHEC OULDH AVEBE ENCHA NGEDF ORANY OFTHE M',
        rotor_left_id=3, rotor_mid_id=1, rotor_right_id=2,
        reflector_id='C', rotor_key='RAB', ringsetting_key='BIT', plugboard=['WO', 'ND', 'ER'])
    expected = 'BVELM BZJHD IKKCD EVBQI MYSMI WITWS WHART FPQBW ZDUWR PJAZG ORZBD ICPJH VLQLJ MFGTD VXREQ RNIBT KQQMJ SXTYS JZCYU ANPGW QDTZR ARTWV BNCKT OPVUD RZRJG HGDCB PPPEW IIVON CSDMC NEVOP HVZCI IYEGU VVZMG ZBVDX KJZTX DPASX MUCKY KDXWJ SXHFV VJLWB SISRQ IKVTR YRJIV YSKUO JFQLS QFSNX COWID QJVHZ EFYLB LKOQQ ZMXOO BHNGS UDQNC ANUOZ YUHVJ CIXEI WODOV EYPJP RLIKH BOUFG ZTQIQ MKLJZ KKFJS JRUKY KYYTR NSGBI IGIQW YFNKE JNFGT TPCBA WIVDN QBCNU XAMHP XMIAM MDZPF WONBY EQESR YBZYM TYEZO TTVTS FVVUY YVHKS NWREL GIXDT TKQOB DORBR TDLZY IVVAY RFKML OINSJ UDWSS JTQTW MXLZM LULVH B'

    print(sys._getframe().f_code.co_name)
    assert_function(expected, result)
    print('')


test1()
test2()
test3()
