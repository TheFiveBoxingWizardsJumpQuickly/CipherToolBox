
rot_a(c,k) : 1文字のみのRot. c:text, k:Rot num, , nc:number convert flag
vig_a(c,k,type) : 1文字のみのVig. c:text, k:key, type:"d"ならdecode, その他encode
rot(c,k) : Rot. c:text, k:Rot num
vig_e(c,k,nc=False), vig_d(c,k,nc=False), beaufort(c,k,nc=False): Vig encode & decode, Beaufort. c:text, k:key, nc:number convert flag
vig_e_auto(c,k,nc=False), vig_d_auto(c,k,nc=False): Auto key Vig encode & decode. c:text, k:key, nc:number convert flag
rev(c) : Reverse
kw(lregexp) : 正規表現にマッチする
atbash(c, nc:number convert flag)
playfair_a(c,mode,mx) :2文字のみのPlayfair. c:text, mode:"d"ならdecode, その他encode, mx:Matrixのサイズ。デフォルトは5だが6*6も同様に計算できる。
playfair_e, playfair_d(text)
playfair_d6: 6*6matrixのplayfair
adfgx_e, adfgx_d(text, table_keyword, transposition_keyword)
adfgvx_e, adfgvx_d(text, table_keyword, transposition_keyword)
morse_d, morse_e (text, bin_code=False, delimiter=" ") : bin_code == Trueの場合、-.の代わりに01を使用したMorse. 
bacon1_d, bacon1_e, bacon2_d, bacon2_e : Bacon cipher. 入力の仕方はmorseと同じ。Bacon1はIとJ, UとVを同一視する。Bacon2はいずれも別々に処理。 
columnar_e, columnar_d (c,col) : colには順番のリストを入れる。キーワードからassign_digits(x)で生成できる
affine_e(text, a, b), affine_d(text, a, b): aは掛け算、bは足し算部分
railfence_e, railfence_d(text, rails, offset=0)
bifid_e, bifid_d(text, table_keyword="")
abc012(text)
hexbash(c)
enigma(text, rotor_left_id, rotor_mid_id, rotor_right_id, reflector_id, rotor_key,ringsetting_key,plugboard):
    text: encode/decode phrase, roter_*_id: 1-5, reflector_id: A-C, rotor_key: 3 letters (ex. XWB),
            ringsetting_key: 3 letters (ex. FVN), plugboard: letter paris list (ex. ['PO', 'ML', 'IU'])  
purple_encode, purple_decode (text, sixes_switch_position, twenties_switch_1_position, twenties_switch_2_position, twenties_switch_3_position, plugboard_full, rotor_motion_key): switch_positionは1-6 or 1-25 int, plugboard_fullは26 文字のプラグボード配列, rotor_motion_keyは231等のキーで指示
text_split(text, step, sep = ' ')
table_subtitution(text, method) the method should be the right name. See the code for avaliable names.
hiragana_to_katakana(text)
split_dakuten(text): ガ to カ゛ 
convert_to_3wa(apikey, latitude, longitude, language): 
convert_to_coordinates(apikey, words):
vanity_e(text, mode), vanity_d(text, mode): mode = toggle, rept_number. number_rept